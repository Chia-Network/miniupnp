name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [windows-latest]
        #os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        # we need fetch-depth 0 so setuptools_scm can resolve tags

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.3.0

    - name: Install Visual C++ for Python 2.7
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install vcpython27 -f -y

    - name: Prepare Windows Build environment - add MSYS2
      if: startsWith(matrix.os, 'windows')
      uses: numworks/setup-msys2@v1
      with:
        update: true

    - name: Windows install dependencies and build
      if: startsWith(matrix.os, 'windows')
      run: |
        msys2do pacman -S --noconfirm mingw-w64-x86_64-toolchain make
      #msys2do ./windows-build.sh

    - name: Build wheel
      run: |
        cd miniupnpc
        python -m cibuildwheel --output-dir dist
      env:
        # build python 3.7 and 3.8
        CIBW_BUILD: cp37-* cp38-*
        CIBW_BEFORE_BUILD: python -m pip install --upgrade pip
        CIBW_BEFORE_BUILD_WINDOWS: python -m pip install --upgrade pip && mingw32-make -f Makefile.mingw pythonmodule
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: miniupnpc/dist
